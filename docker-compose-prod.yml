version: '3.9'

services:
  client:
    container_name: practicum-client
    image: cr.yandex/${ID_REGISTRY}/cat-pairs/client:${TAG}
    restart: always
    ports:
      - '3000:3000'
    environment:
      CLIENT_HOST: ${CLIENT_HOST}
      SERVER_HOST: ${SERVER_HOST}
      NODE_ENV: production
    depends_on:
      server:
        condition: service_started
      postgresdb:
        condition: service_healthy
  server:
    container_name: practicum-server
    image: cr.yandex/${ID_REGISTRY}/cat-pairs/server:${TAG}
    restart: always
    ports:
      - '3001:${SERVER_PORT}'
    environment:
      SERVER_PORT: ${SERVER_PORT}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PORT: ${POSTGRES_PORT}
      NODE_ENV: production
    depends_on:
      postgresdb:
        condition: service_healthy
  postgresdb:
    container_name: postgresdb
    image: postgres:14
    ports:
      - '5432:5432'
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
      PGUSER: ${POSTGRES_USER}
    volumes:
      - postgresdata:/var/lib/postgresql/dat
    healthcheck:
      test:
        [
          'CMD-SHELL',
          'pg_isready',
          '-q',
          '-h',
          'localhost',
          '-p',
          '${POSTGRES_PASSWORD}',
          '-U',
          '${POSTGRES_USER}',
        ]
      interval: 10s
      timeout: 5s
      retries: 5
volumes:
  postgresdata:
